── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.3     ✔ dplyr   1.0.7
✔ tidyr   1.1.3     ✔ stringr 1.4.0
✔ readr   2.0.0     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
Loading required package: StanHeaders
rstan (Version 2.21.2, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
options(mc.cores = parallel::detectCores()).
To avoid recompilation of unchanged Stan programs, we recommend calling
rstan_options(auto_write = TRUE)

Attaching package: ‘rstan’

The following object is masked from ‘package:tidyr’:

    extract

This is loo version 2.4.1
- Online documentation and vignettes at mc-stan.org/loo
- As of v2.0.0 loo defaults to 1 core but we recommend using as many as possible. Use the 'cores' argument or set options(mc.cores = NUM_CORES) for an entire session. 

Attaching package: ‘loo’

The following object is masked from ‘package:rstan’:

    loo

[1] "Model: PA_Aps_LLps_opt"
[1] "Model dir: ./model/PA_Aps_LLps_opt.stan"
[1] "Data: PA"
[1] "n_iter = 4000"
[1] "n_warm = 3000"
[1] "n_thin = 1"
[1] "n_chains = 4"
OBS data
Rows: 107 Columns: 40
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (6): sp, site, strata, sp_site_strata, SampleID, site2
dbl (34): SLA_LEAF, SLA_DISC, LIFETIME, Amass, Rmass, Amax, N_PCT, P_PCT, LT...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.

SAMPLING FOR MODEL 'PA_Aps_LLps_opt' NOW (CHAIN 1).

SAMPLING FOR MODEL 'PA_Aps_LLps_opt' NOW (CHAIN 2).

SAMPLING FOR MODEL 'PA_Aps_LLps_opt' NOW (CHAIN 3).

SAMPLING FOR MODEL 'PA_Aps_LLps_opt' NOW (CHAIN 4).
Chain 1: 
Chain 1: Gradient evaluation took 0.00025 seconds
Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 2.5 seconds.
Chain 1: Adjust your expectations accordingly!
Chain 1: 
Chain 1: 
Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup)
Chain 2: 
Chain 2: Gradient evaluation took 0.000226 seconds
Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 2.26 seconds.
Chain 2: Adjust your expectations accordingly!
Chain 2: 
Chain 2: 
Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup)
Chain 3: 
Chain 3: Gradient evaluation took 0.000221 seconds
Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 2.21 seconds.
Chain 3: Adjust your expectations accordingly!
Chain 3: 
Chain 3: 
Chain 4: 
Chain 4: Gradient evaluation took 0.000207 seconds
Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 2.07 seconds.
Chain 4: Adjust your expectations accordingly!
Chain 4: 
Chain 4: 
Chain 4: Iteration:    1 / 4000 [  0%]  (Warmup)
Chain 3: Iteration:    1 / 4000 [  0%]  (Warmup)

Timing stopped at: 2.256 0.164 1.775
Execution halted
