This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) (preloaded format=pdflatex 2017.10.7)  5 NOV 2018 15:29
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**eqs.tex
(./eqs.tex
LaTeX2e <2017-04-15>
Babel <3.10> and hyphenation patterns for 22 language(s) loaded.
(/usr/local/texlive/2017basic/texmf-dist/tex/latex/base/article.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
(/usr/local/texlive/2017basic/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
) (/usr/local/texlive/2017basic/texmf-dist/tex/latex/psnfss/times.sty
Package: times 2005/04/12 PSNFSS-v9.2a (SPQR) 
) (/usr/local/texlive/2017basic/texmf-dist/tex/latex/setspace/setspace.sty
Package: setspace 2011/12/19 v6.7a set line spacing
) (/usr/local/texlive/2017basic/texmf-dist/tex/latex/lineno/lineno.sty
Package: lineno 2005/11/02 line numbers on paragraphs v4.41
\linenopenalty=\count87
\output=\toks14
\linenoprevgraf=\count88
\linenumbersep=\dimen103
\linenumberwidth=\dimen104
\c@linenumber=\count89
\c@pagewiselinenumber=\count90
\c@LN@truepage=\count91
\c@internallinenumber=\count92
\c@internallinenumbers=\count93
\quotelinenumbersep=\dimen105
\bframerule=\dimen106
\bframesep=\dimen107
\bframebox=\box26
LaTeX Info: Redefining \\ on input line 3056.
) (/usr/local/texlive/2017basic/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2017/09/02 v2.17a AMS math features
\@mathmargin=\skip43

For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2017basic/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text
 (/usr/local/texlive/2017basic/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks15
\ex@=\dimen108
)) (/usr/local/texlive/2017basic/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen109
) (/usr/local/texlive/2017basic/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2016/03/08 v2.02 operator names
)
\inf@bad=\count94
LaTeX Info: Redefining \frac on input line 213.
\uproot@=\count95
\leftroot@=\count96
LaTeX Info: Redefining \overline on input line 375.
\classnum@=\count97
\DOTSCASE@=\count98
LaTeX Info: Redefining \ldots on input line 472.
LaTeX Info: Redefining \dots on input line 475.
LaTeX Info: Redefining \cdots on input line 596.
\Mathstrutbox@=\box27
\strutbox@=\box28
\big@size=\dimen110
LaTeX Font Info:    Redeclaring font encoding OML on input line 712.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 713.
\macc@depth=\count99
\c@MaxMatrixCols=\count100
\dotsspace@=\muskip10
\c@parentequation=\count101
\dspbrk@lvl=\count102
\tag@help=\toks16
\row@=\count103
\column@=\count104
\maxfields@=\count105
\andhelp@=\toks17
\eqnshift@=\dimen111
\alignsep@=\dimen112
\tagshift@=\dimen113
\tagwidth@=\dimen114
\totwidth@=\dimen115
\lineht@=\dimen116
\@envbody=\toks18
\multlinegap=\skip44
\multlinetaggap=\skip45
\mathdisplay@stack=\toks19
LaTeX Info: Redefining \[ on input line 2817.
LaTeX Info: Redefining \] on input line 2818.
) (./eqs.aux)
\openout1 = `eqs.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 9.
LaTeX Font Info:    ... okay on input line 9.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 9.
LaTeX Font Info:    ... okay on input line 9.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 9.
LaTeX Font Info:    ... okay on input line 9.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 9.
LaTeX Font Info:    ... okay on input line 9.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 9.
LaTeX Font Info:    ... okay on input line 9.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 9.
LaTeX Font Info:    ... okay on input line 9.
LaTeX Font Info:    Try loading font information for OT1+ptm on input line 9.
 (/usr/local/texlive/2017basic/texmf-dist/tex/latex/psnfss/ot1ptm.fd
File: ot1ptm.fd 2001/06/04 font definitions for OT1/ptm.
)
Missing character: There is no Ä in font cmr10!
Missing character: There is no ± in font cmr10!
Missing character: There is no Ä in font cmr10!
Missing character: There is no ± in font cmr10!

Overfull \hbox (19.52054pt too wide) detected at line 18
[]
 []

./eqs.tex:47: Undefined control sequence.
<recently read> \^^]
                    
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> \^^]
               \Sigma 
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ...ce {\hbox {$\m@th \displaystyle \^^]
                                                  \Sigma $}}{\hbox {$\m@th \...
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ...ma $}}{\hbox {$\m@th \textstyle \^^]
                                                  \Sigma $}}{\hbox {$\m@th \...
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ... $}}{\hbox {$\m@th \scriptstyle \^^]
                                                  \Sigma $}}{\hbox {$\m@th \...
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ...hbox {$\m@th \scriptscriptstyle \^^]
                                                  \Sigma $}}
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<recently read> \^^]
                    
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> \^^]
               \Sigma 
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ...ce {\hbox {$\m@th \displaystyle \^^]
                                                  \Sigma $}}{\hbox {$\m@th \...
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ...ma $}}{\hbox {$\m@th \textstyle \^^]
                                                  \Sigma $}}{\hbox {$\m@th \...
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ... $}}{\hbox {$\m@th \scriptstyle \^^]
                                                  \Sigma $}}{\hbox {$\m@th \...
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

./eqs.tex:47: Undefined control sequence.
<argument> ...hbox {$\m@th \scriptscriptstyle \^^]
                                                  \Sigma $}}
l.47 \end{align}
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[1

{/usr/local/texlive/2017basic/texmf-var/fonts/map/pdftex/updmap/pdftex.map}]
./eqs.tex:92: You can't use `macro parameter character #' in math mode.
<argument> ...Cov}(Y,X1) + \mathrm {Cov}(Y,X2) (##
                                                  eq:var) 
l.92 \end{align}
                
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

./eqs.tex:92: You can't use `macro parameter character #' in math mode.
<argument> ...Cov}(Y,X1) + \mathrm {Cov}(Y,X2) (##
                                                  eq:var) 
l.92 \end{align}
                
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

Runaway argument?
 
./eqs.tex:96: Paragraph ended before \align was complete.
<to be read again> 
                   \par 
l.96 
     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./eqs.tex:96: Missing $ inserted.
<inserted text> 
                $
l.96 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:96: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.96 
     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:96: Display math should end with $$.
<to be read again> 
                   \@@@par 
l.96 
     
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./eqs.tex:97: Misplaced alignment tab character &.
l.97 &
       A_{\mathrm{area} \; i}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:97: Missing $ inserted.
<inserted text> 
                $
l.97 & A_
         {\mathrm{area} \; i}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:99: Missing $ inserted.
<inserted text> 
                $
l.99 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in paragraph at lines 97--99

 []

./eqs.tex:100: Misplaced alignment tab character &.
l.100 &
        \mathrm{LL_i} = \beta_0\mathrm{LMAs}_{i}^{\beta_s} \epsilon_{2i}  = ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


./eqs.tex:100: LaTeX Error: \mathrm allowed only in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.100 & \mathrm
               {LL_i} = \beta_0\mathrm{LMAs}_{i}^{\beta_s} \epsilon_{2i}  = ...
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

./eqs.tex:100: Missing $ inserted.
<inserted text> 
                $
l.100 & \mathrm{LL_
                   i} = \beta_0\mathrm{LMAs}_{i}^{\beta_s} \epsilon_{2i}  = ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:100: Extra }, or forgotten $.
l.100 & \mathrm{LL_i}
                      = \beta_0\mathrm{LMAs}_{i}^{\beta_s} \epsilon_{2i}  = ...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./eqs.tex:101: Missing $ inserted.
<inserted text> 
                $
l.101 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in paragraph at lines 100--101

 []

./eqs.tex:102: Misplaced alignment tab character &.
l.102 &
        R_{\mathrm{area} \; i}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:102: Missing $ inserted.
<inserted text> 
                $
l.102 & R_
          {\mathrm{area} \; i}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:105: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.105 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:105: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.105 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./eqs.tex:105: Missing $ inserted.
<inserted text> 
                $
l.105 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:105: Missing } inserted.
<inserted text> 
                }
l.105 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

LaTeX Font Info:    Try loading font information for OT1+phv on input line 105.
(/usr/local/texlive/2017basic/texmf-dist/tex/latex/psnfss/ot1phv.fd
File: ot1phv.fd 2001/06/04 scalable font definitions for OT1/phv.
)
./eqs.tex:105: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.105 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (341.1765pt too wide) detected at line 105
[]
 []

./eqs.tex:105: Extra }, or forgotten \endgroup.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.105 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./eqs.tex:105: Missing $ inserted.
<inserted text> 
                $
l.105 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:105: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.105 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[2]
Runaway argument?
 
./eqs.tex:109: Paragraph ended before \align was complete.
<to be read again> 
                   \par 
l.109 
      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./eqs.tex:109: Missing $ inserted.
<inserted text> 
                $
l.109 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:109: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.109 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:109: Display math should end with $$.
<to be read again> 
                   \@@@par 
l.109 
      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./eqs.tex:110: Misplaced alignment tab character &.
l.110 &
        A_{\mathrm{area} \; i}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:110: Missing $ inserted.
<inserted text> 
                $
l.110 & A_
          {\mathrm{area} \; i}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:112: Missing $ inserted.
<inserted text> 
                $
l.112 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in paragraph at lines 110--112

 []

./eqs.tex:113: Misplaced alignment tab character &.
l.113 &
        \mathrm{LL_i} = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} \mathrm{LMA...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


./eqs.tex:113: LaTeX Error: \mathrm allowed only in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.113 & \mathrm
               {LL_i} = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} \mathrm{LMA...
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

./eqs.tex:113: Missing $ inserted.
<inserted text> 
                $
l.113 & \mathrm{LL_
                   i} = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} \mathrm{LMA...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:113: Extra }, or forgotten $.
l.113 & \mathrm{LL_i}
                      = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} \mathrm{LMA...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./eqs.tex:114: Missing $ inserted.
<inserted text> 
                $
l.114 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in paragraph at lines 113--114

 []

./eqs.tex:115: Misplaced alignment tab character &.
l.115 &
        R_{\mathrm{area} \; i}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:115: Missing $ inserted.
<inserted text> 
                $
l.115 & R_
          {\mathrm{area} \; i}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:117: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.117 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:117: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.117 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./eqs.tex:117: Missing $ inserted.
<inserted text> 
                $
l.117 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:117: Missing } inserted.
<inserted text> 
                }
l.117 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:117: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.117 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (341.1765pt too wide) detected at line 117
[]
 []

./eqs.tex:117: Extra }, or forgotten \endgroup.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.117 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./eqs.tex:117: Missing $ inserted.
<inserted text> 
                $
l.117 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:117: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.117 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

Runaway argument?
 
./eqs.tex:121: Paragraph ended before \align was complete.
<to be read again> 
                   \par 
l.121 
      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./eqs.tex:121: Missing $ inserted.
<inserted text> 
                $
l.121 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:121: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.121 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:121: Display math should end with $$.
<to be read again> 
                   \@@@par 
l.121 
      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

./eqs.tex:122: Misplaced alignment tab character &.
l.122 &
        A_{\mathrm{area} \; i}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:122: Missing $ inserted.
<inserted text> 
                $
l.122 & A_
          {\mathrm{area} \; i}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:124: Missing $ inserted.
<inserted text> 
                $
l.124 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in paragraph at lines 122--124

 []

./eqs.tex:125: Misplaced alignment tab character &.
l.125 &
        \mathrm{LL_i} = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} ({\mathrm{L...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


./eqs.tex:125: LaTeX Error: \mathrm allowed only in math mode.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.125 & \mathrm
               {LL_i} = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} ({\mathrm{L...
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

./eqs.tex:125: Missing $ inserted.
<inserted text> 
                $
l.125 & \mathrm{LL_
                   i} = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} ({\mathrm{L...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:125: Extra }, or forgotten $.
l.125 & \mathrm{LL_i}
                      = \beta_0 A_{\mathrm{area} \; i}^{\beta_m} ({\mathrm{L...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./eqs.tex:126: Missing $ inserted.
<inserted text> 
                $
l.126 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Underfull \hbox (badness 10000) in paragraph at lines 125--126

 []

./eqs.tex:127: Misplaced alignment tab character &.
l.127 &
        R_{\mathrm{area} \; i}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:127: Missing $ inserted.
<inserted text> 
                $
l.127 & R_
          {\mathrm{area} \; i}
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:129: Misplaced \cr.
\math@cr@@@ ->\cr 
                  
l.129 \end{align}
                 
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

./eqs.tex:129: Misplaced \noalign.
\math@cr@@ ... \iffalse }\fi \math@cr@@@ \noalign 
                                                  {\vskip #1\relax }
l.129 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

./eqs.tex:129: Missing $ inserted.
<inserted text> 
                $
l.129 \end{align}
                 
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./eqs.tex:129: Missing } inserted.
<inserted text> 
                }
l.129 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:129: Misplaced \noalign.
\black@ #1->\noalign 
                     {\ifdim #1>\displaywidth \dimen@ \prevdepth \nointerlin...
l.129 \end{align}
                 
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.


Overfull \hbox (341.1765pt too wide) detected at line 129
[]
 []

./eqs.tex:129: Extra }, or forgotten \endgroup.
\endalign ->\math@cr \black@ \totwidth@ \egroup 
                                                \ifingather@ \restorealignst...
l.129 \end{align}
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./eqs.tex:129: Missing $ inserted.
<inserted text> 
                $
l.129 \end{align}
                 
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./eqs.tex:129: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.129 \end{align}
                 
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[3] (./eqs.aux) ) 
Here is how much of TeX's memory you used:
 1168 strings out of 494437
 14637 string characters out of 6166645
 69154 words of memory out of 5000000
 4551 multiletter control sequences out of 15000+600000
 10703 words of font info for 30 fonts, out of 8000000 for 9000
 319 hyphenation exceptions out of 8191
 27i,18n,20p,211b,260s stack positions out of 5000i,500n,10000p,200000b,80000s
{/usr/local/texlive/2017basic/texmf-dist/fonts/enc/dvips/base/8r.enc}</usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmex10.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi5.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi7.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmr7.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/urw/helvetic/uhvr8a.pfb></usr/local/texlive/2017basic/texmf-dist/fonts/type1/urw/times/utmr8a.pfb>
Output written on eqs.pdf (3 pages, 93491 bytes).
PDF statistics:
 55 PDF objects out of 1000 (max. 8388607)
 39 compressed objects within 1 object stream
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

